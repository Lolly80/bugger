// Generated by CoffeeScript 2.0.0-beta4
var fs, langExtensions, langModules, patchStackTrace, path, requireScript;
path = require('path');
fs = require('fs');
patchStackTrace = require('./traces');
langExtensions = ['.coffee'];
langModules = {};
langExtensions.forEach(function (ext) {
  var compile, langModule;
  langModule = require('./lang/' + ext.substr(1));
  langModules[ext] = langModule;
  compile = langModule.compile;
  require.extensions[ext] = compile;
  return Object.defineProperty(require.extensions, ext, {
    get: function () {
      return compile;
    }
  });
});
requireScript = function (fileName, startPaused) {
  var cache$, compile, compileAndBreak, extension, mainModule;
  mainModule = require.main;
  mainModule.filename = process.argv[1] = fs.realpathSync(fileName);
  mainModule.moduleCache && (mainModule.moduleCache = {});
  mainModule.paths = require('module')._nodeModulePaths(path.dirname(fs.realpathSync(fileName)));
  extension = path.extname(fileName);
  if (null != langModules[extension]) {
    cache$ = langModules[extension];
    compileAndBreak = cache$.compileAndBreak;
    compile = cache$.compile;
    if (startPaused)
      compile = compileAndBreak;
  } else {
    compile = function (module, filename) {
      var raw;
      raw = fs.readFileSync(filename, 'utf8');
      if (startPaused)
        raw = "console.error('[bugger] Execution stopped at first line');debugger;\n" + raw;
      return module._compile(raw, filename);
    };
  }
  patchStackTrace();
  return compile(mainModule, fileName);
};
module.exports = { requireScript: requireScript };
