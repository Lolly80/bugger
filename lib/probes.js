// Generated by CoffeeScript 2.0.0-beta4
var loadProbes, Probe;
loadProbes = function (probes) {
  if (null == probes)
    probes = ['network'];
  return probes.forEach(function (probeName) {
    return require('./probes/' + probeName);
  });
};
Probe = function () {
  function Probe(namespace) {
    var this$;
    process.on('message', (this$ = this, function (message) {
      var agent, cache$, fnName;
      if (message.method) {
        cache$ = message.method.split('.');
        agent = cache$[0];
        fnName = cache$[1];
        if (agent === namespace && null != fnName)
          return this$[fnName](message, function () {
            if (null != message.callbackRef)
              return process.send({
                method: 'refCallback',
                callbackRef: message.callbackRef,
                args: Array.prototype.slice.call(arguments)
              });
          });
      }
    }));
  }
  return Probe;
}();
module.exports = {
  loadProbes: loadProbes,
  Probe: Probe
};
