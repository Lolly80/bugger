// Generated by CoffeeScript 1.6.1
var execFile, findChrome, firstExistingPath, fs, path;

path = require('path');

fs = require('fs');

execFile = require('child_process').execFile;

firstExistingPath = function(paths) {
  var _i, _len;
  for (_i = 0, _len = paths.length; _i < _len; _i++) {
    path = paths[_i];
    if (fs.existsSync(path)) {
      return path;
    }
  }
  return null;
};

findChrome = function() {
  var paths;
  paths = (function() {
    switch (process.platform) {
      case 'win32':
        return [path.join(process.env['LocalAppData'], 'Google', 'Chrome', 'Application', 'chrome.exe'), path.join(process.env["ProgramFiles"], "Google", "Chrome", "Application", "chrome.exe"), path.join(process.env["ProgramFiles(x86)"], "Google", "Chrome", "Application", "chrome.exe")];
      case 'darwin':
        return [Â path.join("/", "Applications", "Google Chrome.app", "Contents", "MacOS", "Google Chrome")];
      default:
        return [path.join("/", "opt", "google", "chrome", "google-chrome")];
    }
  })();
  return firstExistingPath(paths);
};

module.exports = function(host, port, debugPort) {
  var args, chromePath, chromeProfilePath;
  chromeProfilePath = path.join(__dirname, '..', 'ChromeProfile');
  args = ["--app=http://" + host + ":" + port + "/debug?port=" + debugPort, "--user-data-dir=" + chromeProfilePath];
  chromePath = findChrome();
  if (!chromePath) {
    throw new Error("Chrome not found");
  }
  return execFile(chromePath, args);
};
